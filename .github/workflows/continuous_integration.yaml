name: Continuous Integration
on:
  push:
  pull_request:
jobs:
  build-and-test:
    name: Build & Test
    uses: ./.github/workflows/build_and_test.yaml
    secrets: inherit

  unstable-release:
    if: ${{ github.ref == 'refs/heads/main' }}
    uses: ./.github/workflows/release.yaml
    needs: build-and-test
    with:
      sha: ${{ github.sha }}
      kind: unstable
      version:
    secrets: inherit

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |
            keep-derivations = true
            keep-outputs = true
      - run: nix develop --command mage lint
      - run: nix fmt -- --check flake.nix
      - name: Lint github workflows
        run: |
          echo "::add-matcher::.github/actionlint-matcher.json"
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/3a2f2c755b6442ec7999b28dfd107e1bb9853389/scripts/download-actionlint.bash)
          ./actionlint -color
        shell: bash

  tidy:
    name: go mod tidy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |
            keep-derivations = true
            keep-outputs = true
      - run: nix develop --command go mod tidy
      - run: git diff-index --quiet HEAD

  which-versions-to-test:
    name: Determine which tags to test for backwards compatibility
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.output-tags.outputs.versions }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |
            keep-derivations = true
            keep-outputs = true
      - run: |
          git fetch --tags
          echo "versions=$(nix develop --command mage legacyTestSuiteTags)" >> "$GITHUB_OUTPUT"
        id: output-tags

  backwards-compatibility-tests:
    name: Backwards compatibility tests
    needs: which-versions-to-test
    if: ${{ needs.which-versions-to-test.outputs.versions != '[]' }}
    strategy:
      matrix:
        legacy_version: ${{ fromJSON(needs.which-versions-to-test.outputs.versions) }}
    uses: ./.github/workflows/build_and_test.yaml
    with:
      legacy_version: ${{ matrix.legacy_version }}
    secrets: inherit
