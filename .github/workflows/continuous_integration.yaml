name: Continuous Integration
on:
  push:
  pull_request:
jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |
            keep-derivations = true
            keep-outputs = true
      - run: CGO_ENABLED=0 LDFLAGS="-w -s" nix develop --command mage
      - run: ./captain run captain-cli-ginkgo
        env:
          RWX_ACCESS_TOKEN: ${{ secrets.RWX_ACCESS_TOKEN }}
          RWX_ACCESS_TOKEN_STAGING: ${{ secrets.RWX_ACCESS_TOKEN_STAGING }} # used from within the tests against staging
          DEBUG: ${{ secrets.ACTIONS_STEP_DEBUG }}
          REPORT: true

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |
            keep-derivations = true
            keep-outputs = true
      - run: nix develop --command mage lint
      - run: nix fmt -- --check flake.nix
      - name: Lint github workflows
        run: |
          echo "::add-matcher::.github/actionlint-matcher.json"
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/3a2f2c755b6442ec7999b28dfd107e1bb9853389/scripts/download-actionlint.bash)
          ./actionlint -color
        shell: bash

  tidy:
    name: go mod tidy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |
            keep-derivations = true
            keep-outputs = true
      - run: nix develop --command go mod tidy
      - run: git diff-index --quiet HEAD

  which-tags-to-test:
    name: Determine which tags to test for backwards compatibility
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.output-tags.outputs.tags }}
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |
            keep-derivations = true
            keep-outputs = true
      - run: |
          git fetch --tags
          echo "tags=$(nix develop --command mage legacyTestSuiteTags)" >> "$GITHUB_OUTPUT"
        id: output-tags

  backwards-compatibility-tests:
    name: Backwards compatibility tests
    needs: which-tags-to-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag: ${{ fromJSON(needs.which-tags-to-test.outputs.tags) }}
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |
            keep-derivations = true
            keep-outputs = true
      - name: Run legacy tests against version ${{ matrix.tag }}
        run: nix develop --command mage integrationTestsFromTag
        env:
          tag: ${{ matrix.tag }}
          REPORT: true
          CGO_ENABLED: 0
          LDFLAGS: -w -s
          RWX_ACCESS_TOKEN: ${{ secrets.RWX_ACCESS_TOKEN }}
          RWX_ACCESS_TOKEN_STAGING: ${{ secrets.RWX_ACCESS_TOKEN_STAGING }} # used from within the tests against staging
          DEBUG: ${{ secrets.ACTIONS_STEP_DEBUG }}
